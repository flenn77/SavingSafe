{% extends 'base.html.twig' %}

{% block title %}Fichiers des clients{% endblock %}

{% block body %}

    <style>
        .sortable:hover {
            cursor: pointer;
            color: #088AF2;
        }
    </style>

    <div class="container my-4">
        <h1 class="mb-4">Tous les fichiers des clients</h1>

        {% if files|length > 0 %}
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th scope="col">
                            <div class="row text-center">
                                <div class="col-md-9 offset-md-0">
                                    <input type="text" class="form-control" id="fileSearchInput" placeholder="Tapez pour rechercher...">
                                </div>
                            </div>
                        </th>
                        <th scope="col">
                            <div class="row text-center">
                                <div class="col-md-11 offset-md-0">
                                    <select class="form-control" id="fileTypeFilter">
                                    <!-- Les options seront ajoutées dynamiquement par JavaScript -->
                                    <option value="all">Les types &darr;</option>
                                </select>                    
                                </div>
                            </div>
                        </th>
                        <th scope="col" class="text-center sortable"  id="sizeFileColumn">Taille (Octets) &darr;</th>
                        <th scope="col" class="text-center sortable" id="dateAdded">Date d'ajout &darr;</th>
                        <th scope="col" class="text-center sortable" id="ownerColumn">Propriétaire &darr;</th>
                    </tr>
                </thead>
                <tbody>
                    {% for file in files %}
                        <tr>
                            <td>{{ file.name }}</td>
                            <td class="text-center">
                                {% set fileExtension = file.name|split('.')|last %}
                                {{ fileExtension }}
                            </td>
                            <td>{{ file.size }}</td>
                            <td>{{ file.date|date('d/m/Y H:i') }}</td>
                            <td>{{ file.getUser().getFullName() }}</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {% else %}
            <div class="alert alert-warning" role="alert">
                Aucun fichier de client n'est actuellement stocké.
            </div>
        {% endif %}
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const fileTypeFilter = document.getElementById('fileTypeFilter');
            const tableRows = document.querySelectorAll('table tbody tr');
            const fileTypes = new Set();

            tableRows.forEach(row => {
                const fileName = row.querySelector('td:nth-child(1)').textContent;
                const fileExtension = fileName.slice(((fileName.lastIndexOf(".") - 1) >>> 0) + 2);

                fileTypes.add(fileExtension);
            });

            fileTypes.forEach(type => {
                const option = document.createElement('option');
                option.value = type;
                option.textContent = type;
                fileTypeFilter.appendChild(option);
            });

            document.getElementById('fileSearchInput').addEventListener('input', filterFiles);
            fileTypeFilter.addEventListener('change', filterFiles);

            function filterFiles() {
                const searchTerm = document.getElementById('fileSearchInput').value.toLowerCase();
                const selectedType = fileTypeFilter.value;

                tableRows.forEach(row => {
                    const fileName = row.querySelector('td:nth-child(1)').textContent.toLowerCase();
                    const fileExtension = fileName.slice(((fileName.lastIndexOf(".") - 1) >>> 0) + 2);

                    if ((fileName.includes(searchTerm) || searchTerm === "") && (fileExtension === selectedType || selectedType === "all")) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }
        });

        document.addEventListener("DOMContentLoaded", function() {
            const headers = document.querySelectorAll('.sortable');

            headers.forEach(header => {
                header.setAttribute('data-sort', 'asc');
                header.addEventListener('click', function() {
                    sortTable(header);
                });
            });
        });

        function sortTable(header) {
            const table = header.closest('table');
            const tbody = table.querySelector('tbody');
            const columnIndex = Array.from(header.parentNode.children).indexOf(header);
            const rows = Array.from(tbody.querySelectorAll('tr'));
            const currentSort = header.getAttribute('data-sort');

            rows.sort((a, b) => {
                const cellA = a.children[columnIndex].textContent.trim().toLowerCase();
                const cellB = b.children[columnIndex].textContent.trim().toLowerCase();

                if (!isNaN(cellA) && !isNaN(cellB)) {
                    return (currentSort === 'asc' ? 1 : -1) * (parseFloat(cellA) - parseFloat(cellB));
                }

                return (currentSort === 'asc' ? 1 : -1) * cellA.localeCompare(cellB);
            });

            rows.forEach(row => {
                tbody.appendChild(row);
            });

            // Inverse le tri pour le prochain clic
            header.setAttribute('data-sort', currentSort === 'asc' ? 'desc' : 'asc');
        }
    </script>
{% endblock %}
