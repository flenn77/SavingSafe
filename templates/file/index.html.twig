{% extends 'base.html.twig' %}

{% block title %}Fichiers{% endblock %}

{% block body %}
<div class="container mt-5">

{% for message in app.flashes('success') %}
    <div class="alert alert-success">
        {{ message }}
    </div>
{% endfor %}

{% for message in app.flashes('error') %}
    <div class="alert alert-danger">
        {{ message }}
    </div>
{% endfor %}

{% for message in app.flashes('dropzone_success') %}
    <div class="alert alert-success" role="alert" data-turbo-cache="false">
        {{ message }}
    </div>
{% endfor %}

    <div class="card">
        <div class="card-header">
            Télécharger un fichier
        </div>
        <div class="card-body">
            {{ form_start(form, {'attr': {'class': 'form'}}) }}
            <div class="mb-3">
                {{ form_label(form.file, 'Fichier', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.file, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
            {{ form_end(form) }}
        </div>
    </div>
</div>


<div class="container mt-5">
    <h3>Vos fichiers :</h3>

    {# Calculer la taille totale des fichiers #}
    {% set totalSize = 0 %}
    {% for file in files %}
        {% set totalSize = totalSize + file.size %}
    {% endfor %}

    {# Utilisez la constante pour une meilleure lisibilité #}
    {% set GB_IN_BYTES = 1024 * 1024 * 1024 %}

    <div class="d-flex justify-content-between mb-2 mt-4">
        <p><strong>Espace utilisé:</strong> {{ (app.user.usedSpace * GB_IN_BYTES)|number_format(0, ',', '') }} Octets</p>
        <p><strong>Espace total disponible:</strong> {{ (app.user.totalSpace * GB_IN_BYTES)|number_format(0, ',', '') }} Octets</p>
        <p><strong>Espace restant:</strong> {{ ((app.user.totalSpace * GB_IN_BYTES) - (app.user.usedSpace * GB_IN_BYTES))|number_format(0, ',', '') }} Octets</p>
    </div>

    <div class="mt-4 mb-4">
        <div class="progress" style="height: 30px;">
            <div class="progress-bar" role="progressbar" style="width: {{ (app.user.usedSpace / app.user.totalSpace) * 100 }}%;" aria-valuenow="{{ (app.user.usedSpace / app.user.totalSpace) * 100 }}" aria-valuemin="0" aria-valuemax="100">
                {{ (app.user.usedSpace / app.user.totalSpace) * 100 | round(2) }}%
            </div>
        </div>
    </div>


   <table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">
                <div class="row text-center">
                    <div class="col-md-9 offset-md-0">
                        <input type="text" class="form-control" id="fileSearchInput" placeholder="Tapez pour rechercher...">
                    </div>
                </div>
            </th>
            <th scope="col">
                <div class="row text-center">
                    <div class="col-md-11 offset-md-0">
                        <select class="form-control" id="fileTypeFilter">
                        <!-- Les options seront ajoutées dynamiquement par JavaScript -->
                        <option value="all">Les types  &darr;</option>
                    </select>                    
                    </div>
                </div>
            </th>
            <th scope="col"class="text-center sortable"  id="sizeFileColumn">Taille (Octets) &darr;</th>
            <th scope="col" class="text-center sortable" id="dateAdded">Date d'ajout &darr;</th>
            <th scope="col" class="text-center">Visualiser</th>
            <th scope="col" class="text-center">Télécharger</th>
            <th scope="col" class="text-center">Supprimer</th>
        </tr>
    </thead>
    <tbody>
        {% for file in files %}
        <tr>
            <th scope="row">{{ loop.index }}</th>
            <td>{{ file.name }}</td>
            <td class="text-center">
                {% set fileExtension = file.name|split('.')|last|lower %}
                {{ fileExtension }}
            </td>
            <td>{{ file.size }}</td>
            <td>{{ file.date|date('d/m/Y H:i') }}</td>
            <td class="text-center">
                <a href="{{ path('app_file_view', {'id': file.id}) }}" class="btn btn-info">Visualiser</a>
            </td >
            <td class="text-center">
                <a href="{{ path('file_download', {'id': file.id}) }}" class="btn btn-primary">Télécharger</a>
            </td>
            <td class="text-center">
                <form action="{{ path('file_delete', {'id': file.id}) }}" method="post" onsubmit="return confirmDelete();">
                    <button type="submit" class="btn btn-danger">Supprimer</button>
                </form>
                <script>
                    function confirmDelete() {
                        return confirm("Êtes-vous sûr de vouloir supprimer ce fichier ?");
                    }
                </script>
            </td>
        </tr>
        {% endfor %}
    </tbody>
</table>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function() {
        const fileTypeFilter = document.getElementById('fileTypeFilter');
        const tableRows = document.querySelectorAll('table tbody tr');
        const fileTypes = new Set();

        tableRows.forEach(row => {
            const fileName = row.querySelector('td:nth-child(2)').textContent;
            const fileExtension = fileName.slice(((fileName.lastIndexOf(".") - 1) >>> 0) + 2).toLowerCase();

                fileTypes.add(fileExtension.toLowerCase());
        });

        fileTypes.forEach(type => {
            const option = document.createElement('option');
            option.value = type;
            option.textContent = type;
            fileTypeFilter.appendChild(option);
        });

        document.getElementById('fileSearchInput').addEventListener('input', filterFiles);
        fileTypeFilter.addEventListener('change', filterFiles);

        function filterFiles() {
            const searchTerm = document.getElementById('fileSearchInput').value.toLowerCase();
            const selectedType = fileTypeFilter.value;

            tableRows.forEach(row => {
                const fileName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                const fileExtension = fileName.slice(((fileName.lastIndexOf(".") - 1) >>> 0) + 2);

                if ((fileName.includes(searchTerm) || searchTerm === "") && (fileExtension === selectedType || selectedType === "all")) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
    });

</script>
{% endblock %}
